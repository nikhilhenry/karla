#!/bin/bash
path=`dirname $BASH_SOURCE`
path_home=`dirname $path`
path_parent=`dirname $path_home`


usageError () {
    echo "Usuage Error"
}

#List skills function
listSkills () {

    if (( `ls $path/support | wc -l` == 0 ))
    then
        echo "I don't know any skill."
        echo "Try: karla learn <skill_name> to learn a skill."
        exit 1
    fi

    echo "### skills #############################"
    for i in `ls support`
    do
        if [[ -f $path/support/$i/info.txt ]]
        then
            echo -e "$i\t`head -1 $path/support/$i/info.txt`"
        else
            echo -e "$i\tUnknown Version, try: karla update $i"
        fi
    done
    echo ""
}

argumentManager () {
    if [[ -d "$path/support/$1" ]]
    then

        #echo "Running $1..."
        paw="$path/support/$1/main.py"
        shift 1
        python3 $paw $@
        #echo $@
        exit 0

    elif (( $# == 1 ))
    then 
        
        #CASE
        case $1 in
            #PRINT USAGE
            "--help" | "-h")
                cat $path/info.txt
                exit 0
                ;;

            #PRINT VERSION
            "--version" | "-v")
                cat $path/info.txt | head -1
                exit 0
                ;;

            #SELF UPDATE
            "update" | "upgrade")
                (cd $path_home && git reset --hard)
                exit 0
                ;;

            #INCORRECT USAGE
            *)
                usageError
                exit 0
                ;;
        esac

    #TWO ARGUMENT FUNCTIONS
    elif (( $# == 2 ))
    then

        case $1 in

            #UPDATE
            "update" | "upgrade")
                if [[ -d $path/support/$2 ]]
                then
                    rm -rf $path/support/$2
                    git clone https://github.com/trishitdedhia/$2.git $path/support/$2
                    exit 0
                else
                    echo "I don't know about $2."
                    echo "Try => karla learn $2"
                fi
                ;;

            #PRINT VERSION
            "--version" | "-v")
                if [[ -d $path/support/$2 ]]
                then
                    cat $path/support/$2/info.txt | head -1
                else
                    echo "I don't know about $2."
                    echo "Try => karla learn $2"
                    exit 1
                fi
                exit 0
                ;;

            #LEARN
            "learn" | "install")
                if [[ -d $path/support/$2 ]]
                then
                    echo "I already know this skill!"
                else
                    git clone https://github.com/trishitdedhia/$2.git $path/support/$2
                fi
                exit 0
                ;;
            
            #FORGET
            "forget" | "unlearn")
                if [[ -d $path/support/$2 ]]
                then
                    rm -rf $path/support/$2
                else
                    echo "I didn't know about $2 anyway!"
                fi
                exit 0
                ;;

            #LIST
            "list" | "show")
                if  [[ $2 == "skills" ]]
                then
                    listSkills
                    exit 0
                else
                    echo "Please specify what to list."
                    exit 0
                fi
                ;;

            #DEFAULT
            *)
                usageError
                exit 0
                ;;
            esac

    fi           
                
}

while [[ $# != 0 ]]
do
    argumentManager "$@"
done
